
------------SELECT--------------
SELECT * FROM PRODUCTION.PRODUCTS
SELECT PRODUCT_ID AS 'ID',PRODUCT_NAME AS 'NAME',LIST_PRICE AS 'PRICE' FROM PRODUCTION.PRODUCTS

-------------ORDER BY CLOUSE------------
SELECT * FROM SALES.CUSTOMERS ORDER BY FIRST_NAME
SELECT * FROM SALES.CUSTOMERS ORDER BY FIRST_NAME DESC -----DESCENDING-----
SELECT * FROM SALES.CUSTOMERS ORDER BY CITY DESC,FIRST_NAME ASC

--------------SELECT TOP CLOUSE--------
SELECT TOP (10) CUSTOMER_ID,FIRST_NAME,CITY FROM SALES.CUSTOMERS
SELECT TOP (10) * FROM SALES.CUSTOMERS
WHERE STATE='CA';
SELECT TOP (10) * FROM SALES.CUSTOMERS
WHERE STATE='CA' ORDER BY FIRST_NAME;

------------------------DISTINCT----To select singl occurce for multiple occurence------

SELECT DISTINCT(CITY) FROM SALES.CUSTOMERS;
SELECT DISTINCT STATE,CITY FROM SALES.CUSTOMERS;

---------------WHERE-------------
SELECT * FROM SALES.CUSTOMERS WHERE STATE='CA';
SELECT * FROM SALES.CUSTOMERS WHERE STATE='CA' AND CITY='ENCINO';
SELECT * FROM SALES.CUSTOMERS WHERE STATE<>'CA';     ---NOT EQUAL TO----

-------------IN OPERATOR-------------

SELECT * FROM PRODUCTION.PRODUCTS WHERE LIST_PRICE IN(269.99,499,429)
SELECT * FROM PRODUCTION.PRODUCTS WHERE LIST_PRICE IN(269.99,499,429) ORDER BY LIST_PRICE

---------- IS NULL OPERATOR-----------
SELECT * FROM SALES.CUSTOMERS WHERE PHONE IS NULL;

-------------NULL--------------
SELECT * FROM SALES.CUSTOMERS WHERE PHONE IS NOT NULL;

---------LIKE----------

SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE 'Z%';--START WITH Z-----WID CARD CHARACTER(%)
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE '%ER';--END WITH ER--
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE 'T%S';
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE '_U%';
SELECT * FROM SALES.CUSTOMERS WHERE CITY LIKE 'S%';
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE 'S%O';
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE '_A%';
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME LIKE '[YZ]%';
SELECT * FROM SALES.CUSTOMERS WHERE LAST_NAME NOT LIKE '[YZ]%';
SELECT * FROM SALES.CUSTOMERS WHERE CITY LIKE '[OS]%';
SELECT * FROM SALES.CUSTOMERS WHERE CITY NOT LIKE '[OS]%';

---------------JOINS-----------------
-----------------INNER JOINS-----------------------
SELECT BR.BRAND_ID,BR.BRAND_NAME,PR.PRODUCT_NAME,PR.LIST_PRICE FROM 
 PRODUCTION.BRANDS BR INNER JOIN PRODUCTION.PRODUCTS PR
ON BR.BRAND_ID=PR.BRAND_ID

SELECT BR.BRAND_ID,BR.BRAND_NAME,PR.PRODUCT_NAME,PR.LIST_PRICE FROM  
PRODUCTION.BRANDS BR INNER JOIN PRODUCTION.PRODUCTS PR
ON BR.BRAND_ID=PR.BRAND_ID WHERE BR.BRAND_ID=9

SELECT OS.ORDER_ID FROM SALES.ORDERS OS INNER JOIN SALES.ORDER_ITEMS OI 
ON OS.ORDER_ID=OI.ORDER_ID 

------------------LEFT JOIN---------------------

SELECT * FROM PRODUCTION.PRODUCTS PR LEFT JOIN SALES.ORDER_ITEMS OI ON PR.PRODUCT_ID=OI.PRODUCT_ID

SELECT * FROM PRODUCTION.PRODUCTS PR LEFT JOIN SALES.ORDER_ITEMS OI ON PR.PRODUCT_ID=OI.PRODUCT_ID
WHERE PR.PRODUCT_ID=317

SELECT * FROM PRODUCTION.STOCKS PS LEFT JOIN SALES.STAFFS ST ON PS.STORE_ID=ST.STORE_ID

------------------RIGHT JOIN---------------

SELECT * FROM PRODUCTION.STOCKS PS RIGHT JOIN SALES.STAFFS ST ON PS.STORE_ID=ST.STORE_ID
SELECT * FROM PRODUCTION.STOCKS PS RIGHT JOIN SALES.STAFFS ST ON PS.STORE_ID=ST.STORE_ID
WHERE PS.STORE_ID=2

-------------------FULL JOINS---------------------------

CREATE TABLE PROJECTS(
PRO_ID INT PRIMARY KEY,
TITLE VARCHAR(20) NOT NULL
);

CREATE TABLE MEMBERS(
MEM_ID INT PRIMARY KEY,
NAME VARCHAR(20) NOT NULL,
PRO_ID INT,
FOREIGN KEY (PRO_ID) REFERENCES PROJECTS(PRO_ID)
);

INSERT INTO PROJECTS VALUES(1,'CRM'),(2,'ERP'),(3,'CMS'),(4,'PM');
INSERT INTO MEMBERS VALUES(100,'JOHN',1),(101,'LILIY',1),(102,'JANE',2),(103,'JACK',NULL);
SELECT * FROM PROJECTS PR FULL JOIN MEMBERS M ON PR.PRO_ID=M.PRO_ID;
SELECT M.NAME,PR.TITLE FROM PROJECTS PR FULL JOIN MEMBERS M ON PR.PRO_ID=M.PRO_ID;

CREATE TABLE MYPRODUCT(
PRODUCT_ID INT PRIMARY KEY,
PRODUCT_NAME VARCHAR(20)
);

CREATE TABLE MYORDER(
ORDER_ID INT PRIMARY KEY,
NAME VARCHAR(20),
PRODUCT_ID INT,
FOREIGN KEY (PRODUCT_ID) REFERENCES MYPRODUCT(PRODUCT_ID)

);

INSERT INTO MYPRODUCT VALUES(1,'SAMSUNG'),(2,'NOKIA'),(3,'VIVO'),(4,'MI')
INSERT INTO MYORDER VALUES(101,'POOJA',1),(102,'KOMAL',1),(103,'ARATI',2),(104,'AKSHAY',4),(105,'NEHA',NULL)
SELECT * FROM MYPRODUCT MP FULL JOIN MYORDER MO ON MP.PRODUCT_ID=MO.PRODUCT_ID;


---------------------GROUP BY---------------------

SELECT SALES.ORDERS.CUSTOMER_ID,COUNT(ORDER_ID) FROM SALES.ORDERS 
WHERE CUSTOMER_ID IN(1,2)
GROUP BY CUSTOMER_ID

SELECT SALES.ORDERS.CUSTOMER_ID,COUNT(ORDER_ID) AS 'ORDER COUNT' FROM SALES.ORDERS 
WHERE CUSTOMER_ID IN(1,2)
GROUP BY CUSTOMER_ID

SELECT SALES.ORDERS.CUSTOMER_ID,COUNT(ORDER_ID) AS 'ORDER COUNT' FROM SALES.ORDERS 
GROUP BY CUSTOMER_ID

SELECT CITY,COUNT(CUSTOMER_ID) FROM SALES.CUSTOMERS
GROUP BY CITY ORDER BY CITY

SELECT ORDER_ID,SUM(QUANTITY*LIST_PRICE) AS 'ORDER VALUE' FROM SALES.ORDER_ITEMS
GROUP BY ORDER_ID
SELECT BRAND_ID,COUNT(PRODUCT_ID) AS 'PRODUCTS' FROM PRODUCTION.PRODUCTS 
GROUP BY BRAND_ID

SELECT PB.BRAND_ID,PB.BRAND_NAME ,COUNT(PB.BRAND_ID) AS 'COUNT' FROM PRODUCTION.BRANDS PB LEFT JOIN PRODUCTION.PRODUCTS PP 
ON PB.BRAND_ID=PP.BRAND_ID GROUP BY PB.BRAND_ID,PB.BRAND_NAME

----------------HAVING CLAUSE----------------------

SELECT CUSTOMER_ID,COUNT(ORDER_ID) FROM SALES.ORDERS GROUP BY CUSTOMER_ID HAVING COUNT(ORDER_ID)>2

SELECT ORDER_ID,SUM(QUANTITY*LIST_PRICE) AS 'ORDER VALUE' FROM SALES.ORDER_ITEMS GROUP BY ORDER_ID
 HAVING SUM(QUANTITY*LIST_PRICE)>20000 ORDER BY [ORDER VALUE]

 -------------------------------SUB QUERYS (NESTED QUERYS)---------------------------


 SELECT * FROM SALES.ORDERS WHERE CUSTOMER_ID IN(
 SELECT CUSTOMER_ID FROM SALES.CUSTOMERS WHERE CITY='NEW YORK'
 );

  SELECT * FROM SALES.ORDERS WHERE CUSTOMER_ID NOT IN(
 SELECT CUSTOMER_ID FROM SALES.CUSTOMERS WHERE CITY='NEW YORK'
 );

 SELECT ORDER_ID,CUSTOMER_ID FROM SALES.ORDERS WHERE ORDER_ID IN(
 SELECT ORDER_ID FROM SALES.ORDER_ITEMS WHERE PRODUCT_ID=20
 );

 SELECT PRODUCT_ID,PRODUCT_NAME FROM PRODUCTION.PRODUCTS WHERE CATEGORY_ID IN(
 SELECT CATEGORY_ID FROM PRODUCTION.CATEGORIES WHERE CATEGORY_NAME='MOUNTAIN BIKES'
 );

 SELECT * FROM PRODUCTION.PRODUCTS WHERE LIST_PRICE>=ALL(SELECT AVG(LIST_PRICE) FROM PRODUCTION.PRODUCTS
 GROUP BY BRAND_ID)

 SELECT * FROM PRODUCTION.BRANDS WHERE BRAND_ID>=ALL(SELECT BRAND_ID FROM PRODUCTION.PRODUCTS
 GROUP BY BRAND_ID)

 SELECT * FROM PRODUCTION.BRANDS WHERE EXISTS(SELECT * FROM PRODUCTION.PRODUCTS)
 ORDER BY BRAND_ID



 -----------------UNION OPERATOR-----------------

 SELECT FIRST_NAME,LAST_NAME FROM SALES.STAFFS
 UNION
 SELECT FIRST_NAME,LAST_NAME FROM SALES.CUSTOMERS



 SELECT FIRST_NAME,LAST_NAME FROM SALES.STAFFS
 UNION ALL
 SELECT FIRST_NAME,LAST_NAME FROM SALES.CUSTOMERS


 SELECT STATE,CITY FROM SALES.CUSTOMERS
 INTERSECT
 SELECT STATE,CITY FROM SALES.STORES

 ------------------------EXCEPT--------------

 SELECT PRODUCT_ID FROM PRODUCTION.PRODUCTS
 EXCEPT
 SELECT PRODUCT_ID FROM SALES.ORDER_ITEMS

 -----------------CTE(COMMON TABLE EXPRESSION)----------

 WITH CTE_SALES AS
 (
    SELECT STAFF_ID,COUNT(*) AS ORDER_COUNT 
	FROM SALES.ORDERS
	WHERE YEAR(ORDER_DATE)='2018'
	GROUP BY STAFF_ID
 )
 SELECT AVG(ORDER_COUNT) AVG_ORDERS_BY_STAFF FROM CTE_SALES